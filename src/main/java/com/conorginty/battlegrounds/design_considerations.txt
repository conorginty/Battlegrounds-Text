1. (3/3/21) Hand and Board share a lot of attributes and methods.
    - Should they inherit from a CardCollection class? (as that's fundamentally what they both are in this design)
    - Decision: Decided to include CardCollection that is extended by Board and Hand (One place to store code)
2. (4/3/21) Decided to use JSON to store the Minion data
    - As such, allowed me to incorporate Maven into the Project
    - Used Maven to install a Gson dependency to allow to work with JSON
3. (5/3/21) Decided to not go with JSON as storage medium for the following reason
    - Minion Abilities (battlecries, deathrattles etc) all have unique effects/behaviours
    - Therefore a method would be required for each minion to describe their effects
    - Decision: To create a Subclass of Minion for each unique Minion character
    - Only a few test examples have been created so far
4. (5/3/21) Need to figure out how Board, Hand and Tavern can all be aware of each other, and how Player can be aware of all of them
    - Decision:
    - Board is aware of No one
    - Tavern is aware of Hand (Hand has a reference to Board) => this allows for Minions to move from Tavern -> Hand (i.e. during purchase)
    - Hand is aware of Board (Hand has a reference to Board) => this allows for Minions to move from Hand -> Board (i.e. when playing a Minion)
5.
